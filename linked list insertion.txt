//insertion at Beginning and End

class Solution
{
    //Function to insert a node at the beginning of the linked list.
    Node insertAtBeginning(Node head, int x)
    {
        // code here
        Node newNode = new Node(x);
        
        if(head == null){
            return newNode;
        }
        
        newNode.next = head;
        head = newNode;
        
        return head;
    }
    
    //Function to insert a node at the end of the linked list.
    Node insertAtEnd(Node head, int x)
    {
        // code here
        Node newNode = new Node(x);
        
        if(head == null){
            return newNode;
        }
        
        Node curr = head;
        
        while(curr.next != null){
            curr = curr.next;
        }
        
        curr.next = newNode;
        return head;
    }
}


//insertion at Middle of a LInked List

*/
class Solution {
    
    public Node insertInMid(Node head, int data){
        //Insert code here, return the head of modified linked list
        Node node = new Node(data);
        
        if(head == null){
            return node;
        }
        
        Node fast = head;
        Node slow = head;
        
        while(fast.next != null && fast.next.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }
        
        node.next = slow.next;
        slow.next = node;
        return head;
        
    }
}