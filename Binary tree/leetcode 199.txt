199. Binary Tree Right Side View

class Solution {
    public List<Integer> rightSideView(TreeNode root) {

       List<Integer> finalAns = new ArrayList<>();

        if(root == null){
             return finalAns;
        }

        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);

        while(!q.isEmpty()){
            int sizeOfLevel = q.size();

            for(int i = 0; i < sizeOfLevel; i++){

                TreeNode currentRoot = q.poll();

                if(i == sizeOfLevel - 1){
                    finalAns.add(currentRoot.val);
                }

                if(currentRoot.left != null){
                    q.offer(currentRoot.left);
                }

                if(currentRoot.right != null){
                    q.offer(currentRoot.right);
                }
            }
        }
    return finalAns;
    }
}
         
        //  List<Integer> result = new ArrayList<>();

        //  if(root == null)  
        //     return result;

        //  result.add(root.val);

        //  while(root.left != null || root.right != null){
                
        //           if(root.right != null){
        //               result.add(root.right.val);
        //               root = root.right;
        //           }else{
        //               result.add(root.left.val);
        //               root = root.left;
        //           }
   

        //  }

    //      return result;
    // }
