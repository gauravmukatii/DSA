142. Linked List Cycle II

public class Solution {
    public ListNode detectCycle(ListNode head) {

        ListNode fast = head;
        ListNode slow = head;

        while(fast != null && fast.next != null){
            fast = fast.next.next;
            slow = slow.next;
            if(fast == slow){
                break;
            }
        }

        if(fast == null || fast.next == null){
            return null;
        }

         ListNode s = head;

         while(s != slow){
             s = s.next;
             slow = slow.next;
         }
    return s;
    }
}